package org.drools.mas;

import org.drools.mas.body.content.*;
import org.drools.mas.action.message.*;
import org.drools.mas.action.message.types.*;
import org.drools.mas.action.message.invokers.*;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.util.Date;
import org.drools.mas.AgentID;
import org.drools.mas.action.helpers.*;
import org.drools.mas.util.helper.*;
import org.drools.grid.api.ResourceDescriptor;
import org.drools.grid.api.impl.ResourceDescriptorImpl;
import org.drools.mas.util.MessageContentEncoder;
import org.drools.mas.helpers.DialogueHelper;
import gov.hhs.fha.nhinc.guvnorassetsscanner.ScannerTask;
import gov.hhs.fha.nhinc.guvnorassetsscanner.ScannerTaskFactory;
import gov.hhs.fha.nhinc.guvnorassetsscanner.io.URLResourceReaderStrategy;
import java.net.URL;

declare AgentNotified
    aid : String
    resourceId : String
end




rule "Say Hello"
when
    $o: Object()
then
    System.out.println("Hi this is the Agent One, Saying Hello -> "+$o);
end

rule "refresh assets"
    timer ( int: 0s 10s )
    when
        $rd: ResourceDescriptorImpl( composite == false ) from ScannerTaskFactory.newScannerTask("file:/Users/salaboy/Projects/drools-mas-agents-impl/lackey-agent/src/test/resources/fullAssets.xml").getResourceDescriptors()
        
    then
        System.out.println(" ### New Resource Descriptor Found -> "+$rd +"-"+ System.currentTimeMillis());
        insert($rd);
end


rule "Notify Changed Resources"
    when
        $rd: ResourceDescriptorImpl($id: id)
        $aid: AgentID($name: name)
    then
        // Notify Agent
        System.out.println(">>>>>>>>>>>>>>> notifying the agent = "+$name +" - rd"+$rd );
        String endpoint = "http://localhost:8081/action-agent/services/AsyncAgentService?wsdl";
        DialogueHelper helper = new DialogueHelper(endpoint);
        helper.invokeInform("lackeyAgent", $aid.getName(), $rd );
        // Insert AgentNotfied
        insert(new AgentNotified($name, $id));

end

query forceInform( String $agentId, String $resourceId,
                      String $return )
       $ret: AgentNotified( $agentId, $resourceId; )
       $return:= String() from MessageContentEncoder.encode($ret, Encodings.XML);
end


rule " inform collector - forceInform"
    when
        $s : SessionLocator($nodeId: nodeId, $sessionId: sessionId, mind == true)
        $action: Action( $msgId: msgId, actionName == "forceInform",
                         $desc      : this["descriptor"],
                         $aid      : this["agentID"]
                       )
        forceInform( $aid, $desc, $return; )
    then
        System.out.println(" >>>>>>>>>>>>>>>>> agent notified "+$return);
        ResponseContent.deliverResponse($nodeId, $sessionId, $msgId, $return, null);
        retract( $action );
end

/*
 * TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
 * Copyright (c) 2008, Nationwide Health Information Network (NHIN) Connect.
 * All rights reserved.Redistribution and use in source and binary forms,
 * with or without modification, are permitted provided that the following
 * conditions are met:
 *
 * - Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer.
 * - Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 * - Neither the name of the NHIN Connect Project nor the names of its contributors
 * may be used to endorse or promote products derived from this software without
 * specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
 * SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
 * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
 * TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 *    END OF TERMS AND CONDITIONS
 */

package gov.hhs.fha.nhinc.kmr2.simulatorAgent.services;

import gov.hhs.fha.nhinc.kmr2.simulatorAgent.ConfigDAO;

import org.drools.mas.body.content.Action;
import java.util.List;
import java.util.Date;
import java.util.ArrayList;


declare SearchPlanResults
    resultInfo          : List
    successStatus       : boolean   = true
    successMessage      : String    = "(ok)"
end

rule "Action_Request : searchPlanResults Init"
salience 10
when
    $a :  Action( actionName == "searchPlanResults",
                  $userId               : this["userId"],
                  $modelId              : this["modelId"],
                  $startIndex           : this["startIndex"],
                  $batchSize            : this["batchSize"],
                  $status               : this["status"],
                  $descriptionContains  : this["descriptionContains"],
                  $authorContains       : this["authorContains"],
                  $nameContains         : this["nameContains"],
                  $lastSavedAfter       : this["lastSavedAfter"],
                  $lastSavedBefore      : this["lastSavedBefore"],
                  $scoreUpTo            : this["scoreUpTo"],
                  $scoreAtLeast         : this["scoreAtLeast"]

                )
    not   SearchPlanResults()
then
    insert( new SearchPlanResults( new ArrayList(  ),
            true,
            "(ok)" )
          );
end


rule "Action_Request : Execute searchPlanResults"
salience 10
no-loop
when
    $a : Action( actionName == "searchPlanResults",
                  $userId               : this["userId"],
                  $modelId              : this["modelId"],
                  $startIndex           : this["startIndex"],
                  $batchSize            : this["batchSize"],
                  $status               : this["status"],
                  $descriptionContains  : this["descriptionContains"],
                  $authorContains       : this["authorContains"],
                  $nameContains         : this["nameContains"],
                  $lastSavedAfter       : this["lastSavedAfter"],
                  $lastSavedBefore      : this["lastSavedBefore"],
                  $scoreUpTo            : this["scoreUpTo"],
                  $scoreAtLeast         : this["scoreAtLeast"]
               )
    $s : SearchPlanResults()
then
    List list = ConfigDAO.searchResults( );
    $s.setResultInfo( list );
    update( $s );
end



rule "Action_Request : clean"
when
    $a :  Action( actionName == "searchPlanResults" )
then
    retract( $a );
end





query searchPlanResults( String $userId, String $modelId,
                         Integer $startIndex, Integer $batchSize,
                         String $status,
                         String $descriptionContains, String $authorContains, String $nameContains,
                         Date $lastSavedAfter, Date $lastSavedBefore,
                         Double $scoreUpTo, Double $scoreAtLeast,
                         Object $return )
    $return := SearchPlanResults(  )
end


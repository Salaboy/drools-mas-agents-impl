
/*
    Domain-Specific, concrete routing rules.
    Can exploit JsonPath / XPath queries on a message's
    encoded form for type-unsafe checks, in addition to
    standard pattern matching on a message content
    represented in object form

*/


package org.drools.mas;

import org.drools.mas.Destination;
import org.drools.mas.SessionMapping;
import org.drools.mas.ACLMessage;
import org.drools.mas.util.ACLMessageFactory;
import org.drools.mas.body.acts.Inform;
import org.drools.mas.body.content.*;
import org.drools.mas.util.InspectMessageHelper;

// ACL message factory, to generate responses
global ACLMessageFactory aclFactory;


rule "Test_Mapping"
when
then
    insert( new SessionMapping( "drX", "session1" ) );
end


rule "Route_Encoded"
salience -1
when
    $msg    : ACLMessage( $msgId : id, $b : body, encoding == Encodings.JSON )
    $userId : String( this != null ) from InspectMessageHelper.inspect( $msg, "$..userId[0]" )
    mapSession( $userId , $sessionId ; )
then
    System.err.println( "Sim Routing message " + $msgId + " to session " + $sessionId + " for user " + $userId );
    insert( new Destination( $msgId, $sessionId ) );
end

rule "Route_Encoded_X"
salience -1
when
    $msg    : ACLMessage( $msgId : id, $b : body, encoding == Encodings.XML )
    $userId : String( this != null && this != "" ) from InspectMessageHelper.inspect( $msg, "//userId" )
    mapSession( $userId , $sessionId ; )
then
    System.err.println( "Sim Routing message " + $msgId + " to session " + $sessionId + " for user " + $userId );
    insert( new Destination( $msgId, $sessionId ) );
end


rule "Route_Encoded_X_map"
salience -1
when
    $msg    : ACLMessage( $msgId : id, $b : body, encoding == Encodings.XML )
    $userId : String( this != null && this != "" ) from InspectMessageHelper.inspect( $msg, "//key[. = 'userId']/../value" )
    mapSession( $userId , $sessionId ; )
then
    System.err.println( "Sim Routing message " + $msgId + " to session " + $sessionId + " for user " + $userId );
    insert( new Destination( $msgId, $sessionId ) );
end


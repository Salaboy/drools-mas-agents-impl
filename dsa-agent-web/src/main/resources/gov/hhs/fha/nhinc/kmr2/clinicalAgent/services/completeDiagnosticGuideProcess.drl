/*
 * TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
 * Copyright (c) 2008, Nationwide Health Information Network (NHIN) Connect.
 * All rights reserved.Redistribution and use in source and binary forms,
 * with or without modification, are permitted provided that the following
 * conditions are met:
 *
 * - Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer.
 * - Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 * - Neither the name of the NHIN Connect Project nor the names of its contributors
 * may be used to endorse or promote products derived from this software without
 * specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
 * SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
 * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
 * TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 *    END OF TERMS AND CONDITIONS
 */

package gov.hhs.fha.nhinc.kmr2.clinicalAgent.services;

import org.drools.mas.body.content.Action;
import gov.hhs.fha.nhinc.kmr2.clinicalAgent.models.decision.*;
import org.drools.mas.util.MessageContentEncoder;
import org.drools.mas.Encodings;


import org.drools.mas.util.helper.*;


rule "Action_Request : completeDiagnosticGuideProcess - Complete"
when
    $a  : Action( actionName == "completeDiagnosticGuideProcess",
                  $userId      : this["userId"],
                  $patientId   : this["patientId "],
                  $dxProcessId : this["dxProcessId"],
                  $status      : this["status"] == "Complete"
                )
    $dx : DiagnosticGuideProcess( id == $dxProcessId, status == "Started", $steps : diagnosticProcessHistory, $taskId : taskId )
then
    modify ($dx) {
        setStatus( "Complete" );
    }
    insert( new TaskStateTransition( $taskId, TaskTransitions.COMPLETE, null, new java.util.Date() ) );
end

rule "Action_Request : completeDiagnosticGuideProcess - Cancel"
when
    $a  : Action( actionName == "completeDiagnosticGuideProcess",
                  $userId      : this["userId"],
                  $patientId   : this["patientId "],
                  $dxProcessId : this["dxProcessId"],
                  $status      : this["status"] == "Cancel"
                )
    $dx : DiagnosticGuideProcess( id == $dxProcessId, status == "Started", canCancel == true )
then
    retract( $dx );
end





query completeDiagnosticGuideProcess( String $userId, String $patientId, String $dxProcessId, String $status, DiagnosticGuideProcess $return )
    $return := DiagnosticGuideProcess()
end


rule "Action_Request : completeDiagnosticGuideProcess - Result"
salience -100
when
    $s : SessionLocator( $nodeId: nodeId, $sessionId: sessionId, mind == true )
    $a  : Action( actionName == "completeDiagnosticGuideProcess", $msgId : msgId,
                  $userId      : this["userId"],
                  $patientId   : this["patientId "],
                  $dxProcessId : this["dxProcessId"],
                  $status      : this["status"] == "Complete"
                )
    ?completeDiagnosticGuideProcess( $userId, $patientId, $dxProcessId, $status, $return ; )
then
    retract( $a );
    ResponseContent.deliverResponse( $nodeId, $sessionId, $msgId, $return, null );
end
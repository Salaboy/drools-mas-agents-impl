/*
 * TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
 * Copyright (c) 2008, Nationwide Health Information Network (NHIN) Connect.
 * All rights reserved.Redistribution and use in source and binary forms,
 * with or without modification, are permitted provided that the following
 * conditions are met:
 *
 * - Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer.
 * - Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 * - Neither the name of the NHIN Connect Project nor the names of its contributors
 * may be used to endorse or promote products derived from this software without
 * specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
 * SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
 * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
 * TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 *    END OF TERMS AND CONDITIONS
 */
/*
    Domain-Specific, concrete routing rules.
    Can exploit JsonPath / XPath queries on a message's
    encoded form for type-unsafe checks, in addition to
    standard pattern matching on a message content
    represented in object form

*/


package org.drools.mas;


import org.drools.mas.ACLMessage;
import org.drools.mas.util.ACLMessageFactory;
import org.drools.mas.Encodings;
import org.drools.mas.util.InspectMessageHelper;
import org.drools.mas.body.acts.Inform;
import org.drools.mas.body.content.Info;

// ACL message factory, to generate responses
global ACLMessageFactory aclFactory;




rule "TestMin"
when
then
    insert( new SessionMapping( "99990070","sessionSurvey" ) );
end

rule "TestAnother"
when
then
    insert( new SessionMapping( "123456","demoSession" ) );
end


rule "Route_Encoded"
salience -1
when
    $msg : ACLMessage( $msgId : id, $b : body, encoding == Encodings.JSON /* , $patientId : this.inspect("$..name[0]") */ )
    $patientId : String( this != null ) from InspectMessageHelper.inspect( $msg, "$..patientId[0]" )
then
    insert( new MappingLookup( $msgId, $patientId ) );
end

rule "Route_Encoded_X"
salience -1
when
    $msg : ACLMessage( $msgId : id, $b : body, encoding == Encodings.XML /* , $patientId : this.inspect("$..name[0]") */ )
    $patientId : String( this != null && this != "" ) from InspectMessageHelper.inspect( $msg, "//patientId" )
then
    insert( new MappingLookup( $msgId, $patientId ) );
end


rule "Route_Encoded_X_map"
salience -1
when
    $msg : ACLMessage( $msgId : id, $b : body, encoding == Encodings.XML /* , $patientId : this.inspect("$..name[0]") */ )
    $patientId : String( this != null && this != "" ) from InspectMessageHelper.inspect( $msg, "//key[. = 'patientId']/../value" )
then
    insert( new MappingLookup( $msgId, $patientId ) );
end




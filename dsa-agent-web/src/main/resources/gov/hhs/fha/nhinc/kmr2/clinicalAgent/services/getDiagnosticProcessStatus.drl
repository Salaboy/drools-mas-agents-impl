/*
 * TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
 * Copyright (c) 2008, Nationwide Health Information Network (NHIN) Connect.
 * All rights reserved.Redistribution and use in source and binary forms,
 * with or without modification, are permitted provided that the following
 * conditions are met:
 *
 * - Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer.
 * - Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 * - Neither the name of the NHIN Connect Project nor the names of its contributors
 * may be used to endorse or promote products derived from this software without
 * specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
 * SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
 * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
 * TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 *    END OF TERMS AND CONDITIONS
 */

package gov.hhs.fha.nhinc.kmr2.clinicalAgent.services;

import org.drools.mas.body.content.Action;
import gov.hhs.fha.nhinc.kmr2.clinicalAgent.models.decision.*;
import org.drools.mas.util.MessageContentEncoder;
import org.drools.mas.Encodings;



rule "Action_Request : getDiagnosticProcessStatus"
when
    $a : Action( actionName == "getDiagnosticProcessStatus",
                 $userId      : this["userId"],
                 $patientId   : this["patientId"],
                 $processId   : this["dxProcessId"],
                 $refresh     : this["forceRefresh"]
                )
then
    System.out.println(" GET STATUS for " + $processId );
    retract( $a );
end


rule "Update State on complete"
salience 10
when
    $a  : Action( actionName == "getDiagnosticProcessStatus",
                  $dxProcessId   : this["dxProcessId"] )
    $dx : DiagnosticGuideProcess( id == $dxProcessId, status == "Complete" || == "Cancel" )
then
    System.out.println("Process complete/cancelled, no advance");
    $dx.setCanAdvance( false );
end


rule "Update State by action I"
salience 10
when
    $a  : Action( actionName == "getDiagnosticProcessStatus",
                  $dxProcessId   : this["dxProcessId"] )
    $dx : DiagnosticGuideProcess( id == $dxProcessId, status != "Complete" && != "Cancel", $steps : diagnosticProcessHistory )
          DxDecision( current == true, this memberOf $steps, $acts : actions )
          not DxAction( this memberOf $acts, status == "Started" || == "Committed" )
then
    System.out.println("Here we advance");
    $dx.setCanAdvance( true );
end

rule "Update State by action II"
salience 10
when
    $a  : Action( actionName == "getDiagnosticProcessStatus",
                  $dxProcessId   : this["dxProcessId"] )
    $dx : DiagnosticGuideProcess( id == $dxProcessId, status != "Complete" && != "Cancel", $steps : diagnosticProcessHistory )
          DxDecision( current == true, this memberOf $steps, $acts : actions )
          exists( DxAction( this memberOf $acts, status == "Started" || == "Committed" ) )
then
    System.out.println("Pending action, no advance");
    $dx.setCanAdvance( false );
end




query getDiagnosticProcessStatus( String $userId, String $patientId, String $dxProcessId, boolean $refresh, String $return )
    $ret    :  DiagnosticGuideProcess( id == $dxProcessId )
    $return := String() from MessageContentEncoder.encode($ret, Encodings.XML)
end
